// Mocks generated by Mockito 5.2.0 from annotations
// in house_stats/test/house_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:house_stats/data/house_model.dart' as _i4;
import 'package:house_stats/data/house_view_model.dart' as _i3;
import 'package:house_stats/utils/async_data.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAsyncData_0<T> extends _i1.Fake implements _i2.AsyncData<T> {}

/// A class which mocks [HouseViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHouseViewModel extends _i1.Mock implements _i3.HouseViewModel {
  MockHouseViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AsyncData<dynamic> get asyncDataStatus =>
      (super.noSuchMethod(Invocation.getter(#asyncDataStatus),
          returnValue: _FakeAsyncData_0<dynamic>()) as _i2.AsyncData<dynamic>);
  @override
  set asyncDataStatus(_i2.AsyncData<dynamic>? _asyncDataStatus) =>
      super.noSuchMethod(Invocation.setter(#asyncDataStatus, _asyncDataStatus),
          returnValueForMissingStub: null);
  @override
  List<_i4.House> get houses => (super.noSuchMethod(Invocation.getter(#houses),
      returnValue: <_i4.House>[]) as List<_i4.House>);
  @override
  set houses(List<_i4.House>? _houses) =>
      super.noSuchMethod(Invocation.setter(#houses, _houses),
          returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> fetchAllHouses() =>
      (super.noSuchMethod(Invocation.method(#fetchAllHouses, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
